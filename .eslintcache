[{"/Users/elle/turing/mod-3/project/purrfect-status/src/index.js":"1","/Users/elle/turing/mod-3/project/purrfect-status/src/Components/App/index.js":"2","/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Home/index.js":"3","/Users/elle/turing/mod-3/project/purrfect-status/src/apiCalls.js":"4","/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Form/index.js":"5","/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Picture/index.js":"6","/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Pawtraits/index.js":"7"},{"size":276,"mtime":1610736339811,"results":"8","hashOfConfig":"9"},{"size":2068,"mtime":1610925011316,"results":"10","hashOfConfig":"9"},{"size":254,"mtime":1610843231292,"results":"11","hashOfConfig":"9"},{"size":339,"mtime":1610843231294,"results":"12","hashOfConfig":"9"},{"size":1846,"mtime":1610929332819,"results":"13","hashOfConfig":"9"},{"size":2073,"mtime":1610929347045,"results":"14","hashOfConfig":"9"},{"size":959,"mtime":1610929523927,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1swfd7p",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elle/turing/mod-3/project/purrfect-status/src/index.js",[],["33","34"],"/Users/elle/turing/mod-3/project/purrfect-status/src/Components/App/index.js",["35"],"import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Home from '../Home';\nimport Picture from '../Picture';\nimport Form from '../Form';\nimport Pawtraits from '../Pawtraits';\nimport './App.scss';\nimport rotateCatIcon from '../../Assets/cat-rotate-icon.ico';\n\nfunction App() {\n  const [userInput, setUserInput] = useState(null);\n  const [savedPawtraits, setSavedPawtraits] = useState([]);\n  const [viewFavorire, setViewFavorite] = useState(false);\n\n  const getUserInput = (newInput) => {\n    setUserInput(newInput);\n  };\n\n  const savePawtrait = (newPawtrait) => {\n    if (savedPawtraits.length && newPawtrait.isFavorite) {\n      const duplicatedPawtrait = savedPawtraits.find(\n        (pawtrait) => pawtrait.id === newPawtrait.id\n      );\n      setSavedPawtraits((prev) =>\n        duplicatedPawtrait ? [...prev] : [...prev, newPawtrait]\n      );\n    } else if (newPawtrait.isFavorite) {\n      setSavedPawtraits([newPawtrait]);\n    }\n  };\n\n  useEffect(() => {\n    if (userInput) {\n      savePawtrait(userInput);\n    }\n  }, [userInput]);\n\n  return (\n    <main className='main-body'>\n      <nav className='nav-section'>\n        <h1>\n          Purrfect Status\n          <img\n            className='rotate-cat-icon'\n            src={rotateCatIcon}\n            alt='rotate-cat-icon'\n          />\n        </h1>\n        <Link to={viewFavorire ? '/' : '/saved-pawtraits'}>\n          <button onClick={() => setViewFavorite((prevStatus) => !prevStatus)}>\n            {viewFavorire ? 'Return Home' : 'Saved Pawtraits'}\n          </button>\n        </Link>\n      </nav>\n\n      <Route\n        exact\n        path='/'\n        render={() => (\n          <Home>\n            <Picture setUserInput={setUserInput} userInput={userInput} />\n            <Form getUserInput={getUserInput} />\n          </Home>\n        )}\n      />\n\n      <Route\n        exact\n        path='/saved-pawtraits'\n        render={() => <Pawtraits savedPawtraits={savedPawtraits} />}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Home/index.js",[],"/Users/elle/turing/mod-3/project/purrfect-status/src/apiCalls.js",[],"/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Form/index.js",[],"/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Picture/index.js",["36"],"import React, { useState, useEffect } from 'react';\nimport { getCatPicture } from '../../apiCalls';\nimport './Picture.scss';\nimport { IoPawSharp } from 'react-icons/io5';\nimport PropTypes from 'prop-types';\n\nconst Picture = ({ setUserInput, userInput }) => {\n  const [pictureUrl, setPictureUrl] = useState('');\n  const [error, setError] = useState('');\n\n  const generateRandomCatPicture = () => {\n    getCatPicture()\n      .then((data) => {\n        setPictureUrl(data[0].url);\n        setUserInput(null);\n      })\n      .catch((err) => setError(err.message));\n  };\n\n  const saveFavoriteCatPicture = () => {\n    setUserInput({\n      ...userInput,\n      isFavorite: !userInput.isFavorite,\n      url: pictureUrl\n    });\n  };\n\n  useEffect(() => generateRandomCatPicture(), []);\n\n  return (\n    <section className='picture-section' data-testid='picture-section'>\n      {!pictureUrl && !error && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      <div\n        className='cat-picture-wrapper'\n        data-testid='background-cat-image'\n        style={{\n          backgroundImage: `url(${pictureUrl})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat'\n        }}\n      >\n        <div className='icon-wrapper'>\n          {userInput && (\n            <IoPawSharp\n              className='icon'\n              data-testid='paw-icon'\n              onClick={() => saveFavoriteCatPicture(userInput)}\n              style={{ color: userInput.isFavorite ? '#177fcc' : 'white' }}\n            />\n          )}\n        </div>\n        <figure className='dispay-inputs-wrapper'>\n          <p data-testid='user-inputs'>{userInput && userInput.statusCode}</p>\n          <p data-testid='user-inputs'>{userInput && userInput.explaination}</p>\n        </figure>\n      </div>\n      <div>\n        <button onClick={generateRandomCatPicture}>Not Purrfect</button>\n      </div>\n    </section>\n  );\n};\n\nexport default Picture;\n\nPicture.propTypes = {\n  setUserInput: PropTypes.func.isRequired,\n  userInput: PropTypes.object.isRequired\n};\n","/Users/elle/turing/mod-3/project/purrfect-status/src/Components/Pawtraits/index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":37,"column":6,"nodeType":"43","endLine":37,"endColumn":17,"suggestions":"44"},{"ruleId":"41","severity":1,"message":"45","line":28,"column":47,"nodeType":"43","endLine":28,"endColumn":49,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'savePawtrait'. Either include it or remove the dependency array.","ArrayExpression",["49"],"React Hook useEffect has a missing dependency: 'generateRandomCatPicture'. Either include it or remove the dependency array.",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},{"desc":"53","fix":"54"},"Update the dependencies array to be: [savePawtrait, userInput]",{"range":"55","text":"56"},"Update the dependencies array to be: [generateRandomCatPicture]",{"range":"57","text":"58"},[1109,1120],"[savePawtrait, userInput]",[769,771],"[generateRandomCatPicture]"]